/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

int main(void)
{
	uint32_t *pClkCtrlreg = (uint32_t*)0x40023830;
	uint32_t *pPortDModeReg = (uint32_t*)0x40020C00;
	uint32_t *pPortDOutReg = (uint32_t*)0x40020C14;

	uint32_t *pPortAModeReg = (uint32_t*)0x40020000;
	uint32_t *pPortAInReg = (uint32_t*)0x40020010;

	// 1. enable the clock for GPOID, GPIOA peripherals in the AHB1ENR
	*pClkCtrlreg |= (1<<3);
	*pClkCtrlreg |= (1<<0);

	// 2. Configure PD12 as output
	// a. clear the 24th and 25th bit positions (CLEAR)
	*pPortDModeReg &= ~(3<<24);
	// b. make 24th bit position as 1 (SET)
	*pPortDModeReg |= 1<<24;
	// Configure PA0 as input mode (GPDIOA MODE REGISTER)
	*pPortAModeReg &= ~(3 << 0);
	while(1){
		// read pin status of the pint PA0 (GPIOA INPUT DATA REGISTER)
		uint8_t pinStatus = (uint8_t)(*pPortAInReg & 0x1);
		if (pinStatus) {
			*pPortDOutReg |= (1 << 12);
		} else{
			*pPortDoutReg &= ~(1 <<12);
		}
	}
}
